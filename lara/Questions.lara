
import weaver.Query;
import weaver.Selector;

/**
 *  LARA Questions
 */
aspectdef Questions


	/// Kadabra

	// Q1 : Cant get System method/classes?
	// $call.child(0) -> bases var Ex: (Math) (System.out)
	// $call.child(1) -> method reference Ex:  (sqrt) (println)
	// $call.child(2..) -> params var Ex: (a) (b)

	// call.child(1).decl throws exception when system call (System.out, Math.sqrt)

	// possible Solution: getMethodsCalled {classname, methodname, reftomethod}

	
	var printlnCall = Query.search('class','Puppy').search('method','getAge').search('call').first();
	println(printlnCall.ast);
	println("className: " + printlnCall.declarator);
	println("methodName: " + printlnCall.name);
	//println("method :" + calls.child(1).declaration); // when it tries to get declaration of method throws exception

	

	// Q2 : Why is the returnRef not an Array?
	var farmClassMet = Query.search('class','Farm').search('method','getPuppyArr').first();
	println(farmClassMet.returnRef.isArray);
	println(farmClassMet.returnRef.ast);

	// Q3: kadabra keeps copying files outside folder



	/// Clava
	// Q1 : MyPair values memberAccess throws exception
	// MyPair in file AccessTest.cpp
	var values = Query.search('class','MyPair').search("method").search('memberAccess').first();
	println("field: " + values.name); // 
	println("basetype: " + values.base.joinPointType); // 
	//println("decl: " + values.base.decl); // 
	println();

	// Example of field age working
	var age = Query.search('class','AccessTestAux').search("method",'getAge').search('memberAccess').first();
	println("field: " + age.name); // 
	println("basetype: " + age.base.joinPointType); // 
	println("decl: " + age.base.decl); // 
	
 	println();
 	println();

	
 	
	// Q2 : print repeated memberCall
	var method = Query.search('class','AccessTestAux').search("method",'getAgePlus').first();

	var methodsCalled = Query.search("method", {"signature": s => s === method.signature}).search("memberCall").get();
	println("methods called: " + methodsCalled.length);

	var methodsCalled = Query.searchFrom(method).search("memberCall").get();
	for (methodCalled of methodsCalled)
		println(methodCalled.name);
	println("methods called: " + methodsCalled.length);

	// Q2.1 : AccessTestAux atal of class AccessTest is duplicated
	var $class =  Query.search('class', 'AccessTest').first();
	var vardecls = Query.search('class', 'AccessTest').search("vardecl").get();

	var vardecls = Query.searchFrom($class).search("vardecl").get();

	for (var vardecl of vardecls){
		println("vardecl : " + vardecl.code);
		println("parent : " + vardecl.parent.code);
	}


	// Q3 : From memberAcess is it possible to get the field or method accessed?
	// i only get method name, if there is method overload how to know which one is?


	// Q4 :  memberCall.definition does not give method, gives FunctionProtoType, how to get method?
	// only through signature?

	println();
	println();
	// Q5 : number of methods increases when pair1 is not commented
	var $class = Query.search('class','AccessTest').first();
	for (method of $class.methods)
		println("method: " + method.signature);

	println();
	println();


	/**/

	

	
end