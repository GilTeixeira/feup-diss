
function testClassMetrics(metrics){

	for(metric of metrics) {
		testClassMetric(metric);
	}



}

function testClassMetric(metric){

	println('Testing '+ metric.sigla + '\n');
		
	for(var $class of Query.search("class")) {
		var metricResult = metric.calculateForClass($class);
		//println($class);
		println('	' + metric.sigla + ' for class '+ $class.name + ' = ' + metricResult);
	}

	println();	

}

function testFunctionMetrics(metrics){

	for(metric of metrics) {
		testFunctionMetric(metric);
	}



}

function testFunctionMetric(metric){

	println('Testing '+ metric.sigla + '\n');
		
	for(var $function of Query.search("function")) {
		var metricResult = metric.calculateForFunction($function);
		//println($class);
		println('	' + metric.sigla + ' for function '+ $function.signature + ' = ' + metricResult);
	}

	println();	

}

function testClassMetricsOld(metrics, language){

	for(metric of metrics) {
		if(language === "c++")
			 testClassMetricCpp(metric);

		if(language === "java")
			 testClassMetricJava(metric);	 

		if(language === "ind")
			 testClassMetricInd(metric);	 
		
	}
}




function testClassMetricCpp(metric){

	println('Testing '+ metric.sigla + '\n');
		
	for(var $class of Query.search("class")) {
		var metricResult = metric.calculateForClassCpp($class);
		println('	' + metric.sigla + ' for class '+ $class.name + ' = ' + metricResult);
	}

	println();	

}

function testClassMetricJava(metric){

	println('Testing '+ metric.sigla + '\n');
		
	for(var $class of Query.search("class")) {
		var metricResult = metric.calculateForClassJava($class);
		println('	' + metric.sigla + ' for class '+ $class.name + ' = ' + metricResult);
	}

	println();	

}

function testClassMetricInd(metric){

	println('Testing '+ metric.sigla + '\n');
		
	for(var $class of Query.search("class")) {
		var metricResult = metric.calculateForClassInd($class);
		println('	' + metric.sigla + ' for class '+ $class.name + ' = ' + metricResult);
	}

	println();	

}


  //////////////
 /// Prints ///
//////////////

function printNumberOfClasses(){

	// Get All Classes
	
	var $classes = Query.search('class').get();
	var numberOfClasses = $classes.length;

	println('The project has ' + numberOfClasses + ' classes');
	println();
}

function printSuperClasses(){

	for(c of $classes){
		println('	'+c.name);
		println('		'+MetricQuery.getSuperClasses(c));
	}

}

function printAst() {
	var root = (new JoinPoints()).root();
	printAstAux(root, "");

}

function printAstAux(root, tab) {

	var children = (new JoinPoints())._all_children(root);
	//println(tab+root.astNode);
	println(tab+root.joinPointType);
	println(tab+root.astNode.getClass().getSimpleName());

	if(root.instanceOf('expr')  ){
		//var astNode = root.astNode;
		//println(tab+"isfieldRef");
		//println(tab+root.code);
		//println(tab+Weaver.AST_METHODS.toJavaJoinPoint(root.astNode).code);
		//println(tab+root.getCode());
		//println(tab+astNode.getValue("memberDecl"));
		
	}

	for (child of children)
		printAstAux(child,'	'+tab);

}

