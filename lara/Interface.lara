import weaver.Query;
import weaver.Selector;

import Metrics.Metrics;

import Utils.Visitor;

aspectdef Interface
	
	// Get All Classes
	
	var $classes = Query.search("class").get();
	var numberOfClasses = $classes.length;


	// Test WMC
	
	var wmc = new WMC();
		
	for(var $class of Query.search("class")) {
		
		println($class.name + " " + wmc.calculateForClass($class));
	}

	// Test DIT
	
	var dit = new DIT();
		
	for(var $class of Query.search("class")) {
		
		
	}

	// Test LCOM
	print("\n\n Testing LCOM \n\n");
	var lcom94 = new LCOM94();
		
	for(var $class of Query.search("class")) {
		var lcom94Cal = lcom94.calculateForClass($class);
		println("LCOM94 for class "+ $class.name + " = " + lcom94Cal);
		//lcom94.calculateForClass($class);

		
	}

	// Test CBO
	print("\n\n Testing CBO \n\n");
	var cbo = new CBO();

	for(var $class of Query.search("class")) {
		var cboCal = cbo.calculateForClass($class);
		println("CBO for class "+ $class.name + " = " + cboCal);
		//lcom94.calculateForClass($class);

		
	}

	
	// Test RFC
	print("\n\n Testing RFC \n\n");
	var rfc = new RFC();

	for(var $class of Query.search("class")) {
		var rfcCal = rfc.calculateForClass($class);
		println("RFC for class "+ $class.name + " = " + rfcCal);

		
	}



	// Test CC

	print("\n\n Testing CC \n\n");
	var cc = new CC();

	for(var $function of Query.search("function")) {
		var ccCal = cc.calculateForFunction($function);
		println("CC for function "+ $function.signature + " = " + ccCal);

		
	}

end

/*
	for (var i = 0; i < $classes.length - 1; i++) {
		for (var j = i + 1; j < $classes.length; j++) {
			var $class1 = $classes[i];
			var $class2 = $classes[j];
			
			var cboCal = cbo.calculateForClasses($class1, $class2);
			println("CBO for classes "+ $class1.name + " and " + $class2.name  + " = " + cboCal);
		}
	}
*/


