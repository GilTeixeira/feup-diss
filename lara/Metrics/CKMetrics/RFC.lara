import Metrics.Metric;


// Response For Class

function RFC() {
	var name = "Response For Class";
	var author = "Chidamber and Kemerer";
	var year = 1994;
	var description = "Response For Class (RFC) measures the set of methods that can potentially be executed in response to a message received by an object of that class.";

    // Parent constructor    
    Metric.call(this, name, author, year, description);
}

// Inheritance
RFC.prototype = Object.create(Metric.prototype);


// Override
RFC.prototype.calculateForClass = function($class) {

	// Given a class, its RFC is the addition of:
	// Method elements
	// References to any Method

	var methodsSignatures = new Set();

	for (var $method of $class.methods)
		methodsSignatures.add($method.signature);

	// Functions called by the methods of $class
	var methodsCalled = Query.search("method", {"record": r => r.name === $class.name}).search("memberCall").get();
	
	println("\n Methods Called");
	methodsCalled.forEach(methodCalled => methodsSignatures.add(methodCalled.signature));

	var rfc = methodsSignatures.values().length;
	return rfc;
}

