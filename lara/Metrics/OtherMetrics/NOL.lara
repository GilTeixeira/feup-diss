import Metrics.Metric;

/**
 * Measures the Number of Lines
 * @constructor
 */
function NOL() {
	var id = "OO-NOL";
	var name = "Number of Lines";
	var sigla = "NOL";
	var author = "";
	var year = "";
	var description = "Number of Lines.";

    // Parent constructor    
    Metric.call(this, id, name, sigla, author, year, description);

}

// Inheritance
NOL.prototype = Object.create(Metric.prototype);

NOL.prototype.calculateForProject = function() {
	var value = 0;
	for ($file of  Query.search("file"))
		value += this.calculateForFile($file);
	return value;
}

NOL.prototype.calculateForFunction = function($function) {
	return this.calculateForJoinPoint($function);
}

NOL.prototype.calculateForFile = function($file) {
	return this.calculateForJoinPoint($file);
}

NOL.prototype.calculateForJoinPoint = function($jp) {
	return $jp.endLine-$jp.line+1;
}
